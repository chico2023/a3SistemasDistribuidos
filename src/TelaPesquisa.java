
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.nio.file.Files;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author Windows
 */
public class TelaPesquisa extends javax.swing.JInternalFrame {

    /**
     * Creates new form Cadastrados
     */
    public TelaPesquisa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btAtualizar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btVerFoto = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextField1 = new javax.swing.JTextArea();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        jLabel1.setText("CPF:");

        jLabel2.setText("Informações Cadastrais:");

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btVerFoto.setText("Ver Foto");
        btVerFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerFotoActionPerformed(evt);
            }
        });

        jButton4.setText("Confirmar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        jTextField1.setColumns(20);
        jTextField1.setRows(5);
        jScrollPane1.setViewportView(jTextField1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(226, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btVerFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton4)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAtualizar)
                    .addComponent(btExcluir)
                    .addComponent(btVerFoto))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
        

        
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 
    String cpf = jFormattedTextField1.getText().replaceAll("\\D+", "");

    if (cpf.length() != 11) {
        JOptionPane.showMessageDialog(this, "CPF inválido. O CPF deve conter 11 dígitos.");
        return;
    }
    if (cpf.matches("(\\d)\\1{10}")) {
        JOptionPane.showMessageDialog(this, "CPF inválido. Os dígitos do CPF não podem ser todos iguais.");
        return;
    }

    int soma = 0;
    for (int i = 0; i < 9; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (10 - i);
    }
    int digito1 = 11 - (soma % 11);
    if (digito1 > 9) {
        digito1 = 0;
    }

    soma = 0;
    for (int i = 0; i < 10; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (11 - i);
    }
    int digito2 = 11 - (soma % 11);
    if (digito2 > 9) {
        digito2 = 0;
    }

    boolean cpfValido = (Character.getNumericValue(cpf.charAt(9)) == digito1) &&
            (Character.getNumericValue(cpf.charAt(10)) == digito2);

    if (cpfValido) {
        String filePath = System.getProperty("user.dir") + File.separator + cpf + ".txt";

        try {
            File file = new File(filePath);
            if (file.exists()) {
                Scanner scanner = new Scanner(file);
                StringBuilder foundInfo = new StringBuilder();
                while (scanner.hasNextLine()) {
                    foundInfo.append(scanner.nextLine()).append("\n");
                }
                scanner.close();
                jTextField1.setText(foundInfo.toString());
            } else {
                jTextField1.setText("CPF não encontrado.");
            }
        } catch (FileNotFoundException e) {
            jTextField1.setText("Erro: arquivo não encontrado.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "CPF inválido.");
    }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // TODO add your handling code here:
        String cpf = jFormattedTextField1.getText().replaceAll("\\D+", "");

    if (cpf.length() != 11) {
        JOptionPane.showMessageDialog(this, "CPF inválido. O CPF deve conter 11 dígitos.");
        return;
    }
    if (cpf.matches("(\\d)\\1{10}")) {
        JOptionPane.showMessageDialog(this, "CPF inválido. Os dígitos do CPF não podem ser todos iguais.");
        return;
    }
    int soma = 0;
    for (int i = 0; i < 9; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (10 - i);
    }
    int digito1 = 11 - (soma % 11);
    if (digito1 > 9) {
        digito1 = 0;
    }
    soma = 0;
    for (int i = 0; i < 10; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (11 - i);
    }
    int digito2 = 11 - (soma % 11);
    if (digito2 > 9) {
        digito2 = 0;
    }
    boolean cpfValido = (Character.getNumericValue(cpf.charAt(9)) == digito1) &&
            (Character.getNumericValue(cpf.charAt(10)) == digito2);

    if (cpfValido) {
        String filePath = System.getProperty("user.dir") + File.separator + cpf + ".txt";
        File file = new File(filePath);

        if (file.exists()) {
            try {
                // Atualizando as informações do arquivo com o conteúdo do JTextArea
                String newInfo = jTextField1.getText();
                Files.write(file.toPath(), newInfo.getBytes());

                jTextField1.setText("Informações atualizadas com sucesso.");
            } catch (IOException e) {
                jTextField1.setText("Erro ao atualizar as informações do arquivo.");
            }
        } else {
            jTextField1.setText("CPF não encontrado.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "CPF inválido.");
    }

    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        String cpf = jFormattedTextField1.getText().replaceAll("\\D+", "");

    if (cpf.length() != 11) {
        JOptionPane.showMessageDialog(this, "CPF inválido. O CPF deve conter 11 dígitos.");
        return;
    }
    if (cpf.matches("(\\d)\\1{10}")) {
        JOptionPane.showMessageDialog(this, "CPF inválido. Os dígitos do CPF não podem ser todos iguais.");
        return;
    }
    int soma = 0;
    for (int i = 0; i < 9; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (10 - i);
    }
    int digito1 = 11 - (soma % 11);
    if (digito1 > 9) {
        digito1 = 0;
    }
    soma = 0;
    for (int i = 0; i < 10; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (11 - i);
    }
    int digito2 = 11 - (soma % 11);
    if (digito2 > 9) {
        digito2 = 0;
    }
    boolean cpfValido = (Character.getNumericValue(cpf.charAt(9)) == digito1) &&
            (Character.getNumericValue(cpf.charAt(10)) == digito2);

    if (cpfValido) {
        String filePath = System.getProperty("user.dir") + File.separator + cpf + ".txt";
        File file = new File(filePath);

        if (file.exists()) {
            if (file.delete()) {
                jTextField1.setText("Cliente excluído com sucesso.");
            } else {
                jTextField1.setText("Erro ao excluir o arquivo.");
            }
        } else {
            jTextField1.setText("CPF não encontrado.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "CPF inválido.");
    }

    }//GEN-LAST:event_btExcluirActionPerformed

    private void btVerFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerFotoActionPerformed
        // TODO add your handling code here:
        String cpf = jFormattedTextField1.getText().replaceAll("\\D+", "");

    if (cpf.length() != 11) {
        JOptionPane.showMessageDialog(this, "CPF inválido. O CPF deve conter 11 dígitos.");
        return;
    }
    if (cpf.matches("(\\d)\\1{10}")) {
        JOptionPane.showMessageDialog(this, "CPF inválido. Os dígitos do CPF não podem ser todos iguais.");
        return;
    }
    int soma = 0;
    for (int i = 0; i < 9; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (10 - i);
    }
    int digito1 = 11 - (soma % 11);
    if (digito1 > 9) {
        digito1 = 0;
    }
    soma = 0;
    for (int i = 0; i < 10; i++) {
        soma += Character.getNumericValue(cpf.charAt(i)) * (11 - i);
    }
    int digito2 = 11 - (soma % 11);
    if (digito2 > 9) {
        digito2 = 0;
    }
    boolean cpfValido = (Character.getNumericValue(cpf.charAt(9)) == digito1) &&
            (Character.getNumericValue(cpf.charAt(10)) == digito2);

    if (cpfValido) {
        String folderPath = System.getProperty("user.dir") + File.separator + "logo";
        File folder = new File(folderPath);
        if (folder.exists() && folder.isDirectory()) {
            File[] files = folder.listFiles();
            if (files != null) {
                for (File file : files) {
                    if (file.isFile() && file.getName().equals(cpf + ".jpg")) {
                        try {
                            Desktop.getDesktop().open(file);
                            return; // Foto encontrada e aberta, interrompe a execução
                        } catch (IOException e) {
                            jTextField1.setText("Erro ao abrir o arquivo de foto.");
                            return; // Ocorreu um erro ao abrir o arquivo de foto, interrompe a execução
                        }
                    }
                }
            }
        }
        jTextField1.setText("Foto não encontrada para o CPF digitado.");
    } else {
        JOptionPane.showMessageDialog(this, "CPF inválido.");
    }

    }//GEN-LAST:event_btVerFotoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btVerFoto;
    private javax.swing.JButton jButton4;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextField1;
    // End of variables declaration//GEN-END:variables
}
